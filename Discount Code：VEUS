
var WidgetMetadata = {
  id: "yuanqi.wallpaper",
  title: "元气壁纸",
  description: "基于网页解析的元气壁纸获取工具",
  author: "改造版",
  site: "https://mbizhi.cheetahfun.com/",
  version: "1.0.0",
  requiredVersion: "0.0.1",
  modules: [
    {
      title: "获取壁纸列表",
      description: "根据分类、页码等参数获取壁纸列表",
      requiresWebView: false,
      functionName: "getWallpaperList",
      params: [
        {
          name: "category",
          title: "壁纸分类",
          type: "select",
          description: "选择壁纸分类",
          value: "all",
          options: [
            { title: "全部", value: "all" }
          ]
        },
        {
          name: "type",
          title: "壁纸类型",
          type: "select",
          description: "选择壁纸类型",
          value: "all",
          options: [
            { title: "全部", value: "all" },
            { title: "动态壁纸", value: "dynamic" },
            { title: "静态壁纸", value: "static" }
          ]
        },
        {
          name: "pg",
          title: "页码",
          type: "page",
          value: "1"
        }
      ]
    }
  ],
  search: {
    title: "搜索壁纸",
    functionName: "searchWallpaper",
    params: [
      {
        name: "keyword",
        title: "搜索关键词",
        type: "input",
        description: "输入要搜索的壁纸关键词",
        value: ""
      },
      {
        name: "pg",
        title: "页码",
        type: "page",
        value: "1"
      }
    ]
  }
};

// 基础URL
const BASE_URL = "https://mbizhi.cheetahfun.com";

/**
 * 构建请求URL
 */
function buildWallpaperUrl(category = "all", type = "all", page = 1) {
  let url = BASE_URL;
  
  // 动态壁纸特殊处理
  if (category === "dynamic" || type === "dynamic") {
    url = `${BASE_URL}/dn/`;
    if (page > 1) {
      return `${url}page_${page}.html`;
    }
    return url;
  }
  
  // 其他分类处理
  if (category !== "all") {
    const categoryMap = {
      "dynamic": "/dt/",
      "static": "/jt/", 
      "4k": "/4k/",
      "landscape": "/fj/",
      "anime": "/dm/",
      "beauty": "/mn/",
      "animal": "/dw/",
      "game": "/yx/",
      "fresh": "/xqx/"
    };
    
    if (categoryMap[category]) {
      url += categoryMap[category];
    }
  }
  
  // 添加页码
  if (page > 1) {
    url += `page_${page}.html`;
  }
  
  return url;
}

/**
 * 解析HTML页面中的分类标签
 */
function parseCategoriesFromHtml(html) {
  const categories = [{title: "全部", value: "all"}];
  
  // 匹配分类标签
  const categoryRegex = /<a[^>]+href="\/dn\/d\/([^"]*)"[^>]*>(.*?)<\/a>/gi;
  let match;
  
  while ((match = categoryRegex.exec(html)) !== null) {
    const value = match[1] || "all";
    const title = match[2].trim();
    
    if (value && title && !categories.some(c => c.value === value)) {
      categories.push({title, value});
    }
  }
  
  return categories;
}

/**
 * 解析HTML页面中的壁纸信息
 */
function parseWallpaperFromHtml(html, baseUrl = BASE_URL) {
  const wallpapers = [];
  
  try {
    // 使用更精确的正则表达式匹配壁纸项目
    const itemRegex = /<div[^>]*class="[^"]*item[^"]*"[^>]*>[\s\S]*?<a[^>]+href="([^"]+)"[^>]*>[\s\S]*?<img[^>]+src="([^"]+)"[^>]*alt="([^"]*)"[^>]*>[\s\S]*?<\/div>/gi;
    
    let match;
    let itemIndex = 0;
    
    while ((match = itemRegex.exec(html)) !== null && itemIndex < 50) {
      const detailUrl = match[1].startsWith('http') ? match[1] : baseUrl + match[1];
      const imageUrl = match[2].startsWith('http') ? match[2] : baseUrl + match[2];
      const title = match[3].trim() || `壁纸 ${itemIndex + 1}`;
      
      // 判断是否为动态壁纸
      const isDynamic = detailUrl.includes('/dn/') || 
                       match[0].includes('动态') || 
                       match[0].includes('.mp4') || 
                       match[0].includes('.webm');
      
      wallpapers.push({
        id: detailUrl,
        type: "url",
        title: title,
        posterPath: imageUrl,
        backdropPath: imageUrl,
        mediaType: isDynamic ? "video" : "image",
        description: isDynamic ? "动态壁纸" : "静态壁纸",
        link: detailUrl,
        source: baseUrl
      });
      
      itemIndex++;
    }
    
    console.log(`parseWallpaperFromHtml: 成功解析 ${wallpapers.length} 个壁纸项目`);
    
  } catch (error) {
    console.error("parseWallpaperFromHtml: 解析HTML时出错:", error.message);
  }
  
  return wallpapers;
}

/**
 * 解析壁纸详情页面（增强版）
 */
function parseWallpaperDetail(html, url) {
  const detail = {
    id: url,
    type: "url",
    title: "壁纸详情",
    description: "",
    posterPath: "",
    backdropPath: "",
    videoUrl: null,
    downloadUrl: null,
    resolution: "",
    fileSize: "",
    mediaType: "image",
    link: url
  };
  
  try {
    // 提取标题
    const titleMatch = html.match(/<h1[^>]*class="[^"]*title[^"]*"[^>]*>(.*?)<\/h1>/i);
    if (titleMatch) {
      detail.title = titleMatch[1].replace(/\s*-\s*元气壁纸.*$/i, '').trim();
    }
    
    // 提取视频链接（优先使用video标签的poster和src）
    const videoMatch = html.match(/<video[^>]+src="([^"]+)"[^>]*poster="([^"]+)"/i);
    if (videoMatch) {
      detail.videoUrl = videoMatch[1].startsWith('http') ? videoMatch[1] : BASE_URL + videoMatch[1];
      detail.posterPath = videoMatch[2].startsWith('http') ? videoMatch[2] : BASE_URL + videoMatch[2];
      detail.mediaType = "video";
      detail.description = "动态壁纸 - " + detail.title;
    }
    
    // 如果没有video标签，回退到图片解析
    if (!detail.videoUrl) {
      const imgMatch = html.match(/<img[^>]+src="([^"]+)"[^>]*alt="([^"]*)"/i);
      if (imgMatch) {
        detail.posterPath = imgMatch[1].startsWith('http') ? imgMatch[1] : BASE_URL + imgMatch[1];
        detail.backdropPath = detail.posterPath;
        detail.downloadUrl = detail.posterPath;
      }
    }
    
    // 提取分辨率信息
    const resolutionMatch = html.match(/分辨率[:：]\s*(\d+[x×]\d+)/i);
    if (resolutionMatch) {
      detail.resolution = resolutionMatch[1];
    }
    
    // 提取文件大小
    const sizeMatch = html.match(/大小[:：]\s*([\d\.]+\s*[KMGT]?B)/i);
    if (sizeMatch) {
      detail.fileSize = sizeMatch[1];
    }
    
  } catch (error) {
    console.error("parseWallpaperDetail: 解析详情时出错:", error.message);
  }
  
  return detail;
}

/**
 * 获取动态分类列表
 */
async function getDynamicCategories() {
  const categoryUrl = `${BASE_URL}/dn/d/`;
  
  try {
    const response = await Widget.http.get(categoryUrl, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
      }
    });
    
    if (!response || !response.data) {
      throw new Error("获取分类页面失败");
    }
    
    const categories = parseCategoriesFromHtml(response.data);
    updateModuleCategories(categories);
    return categories;
    
  } catch (error) {
    console.error("getDynamicCategories: 获取分类失败:", error.message);
    return [{title: "全部", value: "all"}];
  }
}

/**
 * 动态更新模块配置
 */
function updateModuleCategories(categories) {
  // 更新模块参数配置
  WidgetMetadata.modules[0].params[0].options = categories;
  console.log("updateModuleCategories: 分类配置已更新");
}

/**
 * 初始化插件
 */
async function initPlugin() {
  try {
    // 初始化时同步最新分类
    await getDynamicCategories();
    console.log("插件初始化完成");
  } catch (error) {
    console.error("插件初始化失败:", error.message);
  }
}

// 调用初始化
initPlugin();

// 以下保留原有功能函数不变...
// （包括getWallpaperList、searchWallpaper、loadDetail等函数）
