/*  =====================
    元数据（ForwardWidget 规范）
    ===================== */
var WidgetMetadata = {
  id: "yuanqi.wallpaper",
  title: "元气壁纸",
  description: "Apple TV Topshelf 动态壁纸模块",
  author: "VEUS",
  site: "https://mbizhi.cheetahfun.com",
  version: "1.0.1",
  requiredVersion: "0.0.1",
  detailCacheDuration: 60,
  modules: [
    {
      title: "获取壁纸列表",
      description: "按分类、页码拉取壁纸",
      requiresWebView: false,
      functionName: "getWallpaperList",
      sectionMode: false,
      cacheDuration: 3600,
      params: [
        {
          name: "category",
          title: "壁纸分类",
          type: "enumeration",
          description: "选择壁纸分类",
          value: "all",
          enumOptions: [
            { title: "全部", value: "all" },
            { title: "4K", value: "4k" },
            { title: "风景", value: "landscape" },
            { title: "动漫", value: "anime" },
            { title: "美女", value: "beauty" },
            { title: "动物", value: "animal" },
            { title: "游戏", value: "game" },
            { title: "小清新", value: "fresh" }
          ]
        },
        {
          name: "pg",
          title: "页码",
          type: "page",
          value: "1"
        }
      ]
    }
  ],
  search: {
    title: "搜索壁纸",
    functionName: "searchWallpaper",
    params: [
      {
        name: "wd",
        title: "关键词",
        type: "input",
        description: "输入要搜索的壁纸关键词",
        value: ""
      },
      {
        name: "pg",
        title: "页码",
        type: "page",
        value: "1"
      }
    ]
  }
};

/*  =====================
    常量 & 工具函数
    ===================== */
const BASE_URL = "https://mbizhi.cheetahfun.com";
const UA = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0 Safari/537.36";

/* 构建列表 / 搜索 URL */
function buildWallpaperUrl(category = "all", page = 1) {
  if (category === "all") {
    return `${BASE_URL}/dn/d/${page > 1 ? `page_${page}.html` : ""}`;
  }
  const map = {
    "4k": "/dn/4k/",
    landscape: "/dn/fj/",
    anime: "/dn/dm/",
    beauty: "/dn/mn/",
    animal: "/dn/dw/",
    game: "/dn/yx/",
    fresh: "/dn/xqx/"
  };
  const path = map[category] || "/dn/d/";
  return `${BASE_URL}${path}${page > 1 ? `page_${page}.html` : ""}`;
}

/* 解析列表页 */
function parseWallpaperList(html) {
  const list = [];
  try {
    const $ = Widget.html.load(html);
    $(".wallpaper-item").slice(0, 50).each((i, el) => {
      const $el = $(el);
      const $a = $el.find("a.preview");
      const href = $a.attr("href");
      const detailUrl = href.startsWith("http") ? href : BASE_URL + href;

      const $img = $a.find("img.lazy");
      const cover = $img.attr("data-src") || $img.attr("src");
      const coverUrl = cover.startsWith("http") ? cover : BASE_URL + cover;

      const title = $el.find(".title").text().trim() || `壁纸 ${i + 1}`;
      const isDynamic = /动态|视频|mp4|webm/i.test(
        $el.text() + " " + detailUrl
      );

      list.push({
        id: detailUrl,
        type: "url",
        title,
        posterPath: coverUrl,
        backdropPath: coverUrl,
        mediaType: isDynamic ? "tv" : "movie",
        genreTitle: isDynamic ? "动态壁纸" : "静态壁纸",
        description: title,
        link: detailUrl
      });
    });
  } catch (e) {
    Widget.log("parseWallpaperList error: " + e.message);
  }
  return list;
}

/* 解析详情页 */
function parseWallpaperDetail(html, url) {
  const detail = {
    id: url,
    type: "url",
    title: "壁纸详情",
    description: "",
    posterPath: "",
    backdropPath: "",
    videoUrl: null,
    mediaType: "movie",
    genreTitle: "",
    link: url
  };
  try {
    const $ = Widget.html.load(html);
    detail.title =
      $("title").text().replace(/\s*-\s*元气壁纸.*$/i, "").trim() || "壁纸";

    /* 视频 */
    const $video = $("#wallpaper-video");
    const videoSrc = $video.find("source").attr("src") || $video.attr("src");
    if (videoSrc) {
      detail.videoUrl = videoSrc.startsWith("http")
        ? videoSrc
        : BASE_URL + videoSrc;
      detail.mediaType = "tv";
      detail.genreTitle = "动态壁纸";
    }

    /* 封面 */
    detail.posterPath = detail.backdropPath =
      $video.attr("poster") ||
      $('meta[property="og:image"]').attr("content") ||
      $('img[alt]').first().attr("src") ||
      "";

    /* 附加信息 */
    const bodyText = $("body").text();
    const res = bodyText.match(/(\d{3,4}[x×]\d{3,4})/i);
    const size = bodyText.match(/(\d+(?:\.\d+)?\s*[KMGT]?B)/i);
    const date = bodyText.match(/(\d{4}-\d{1,2}-\d{1,2})/);
    detail.description = [
      res ? `分辨率: ${res[1]}` : "",
      size ? `大小: ${size[1]}` : "",
      date ? `发布日期: ${date[1]}` : ""
    ]
      .filter(Boolean)
      .join(" ");
  } catch (e) {
    Widget.log("parseWallpaperDetail error: " + e.message);
  }
  return detail;
}

/*  =====================
    对外函数
    ===================== */
async function getWallpaperList(params = {}) {
  const category = params.category || "all";
  const page = Math.max(parseInt(params.pg) || 1, 1);
  const url = buildWallpaperUrl(category, page);
  Widget.log("getWallpaperList: " + url);
  const res = await Widget.http.get(url, { headers: { "User-Agent": UA, Referer: BASE_URL } });
  if (!res?.data) throw new Error("网络异常");
  return parseWallpaperList(res.data);
}

async function searchWallpaper(params = {}) {
  const keyword = (params.wd || "").trim();
  const page = Math.max(parseInt(params.pg) || 1, 1);
  if (!keyword) throw new Error("关键词不能为空");
  const url = `${BASE_URL}/search?keyword=${encodeURIComponent(keyword)}&page=${page}`;
  Widget.log("searchWallpaper: " + url);
  const res = await Widget.http.get(url, { headers: { "User-Agent": UA, Referer: BASE_URL } });
  if (!res?.data) throw new Error("网络异常");
  return parseWallpaperList(res.data);
}

async function loadDetail(detailUrl) {
  if (!detailUrl || typeof detailUrl !== "string") throw new Error("无效详情链接");
  Widget.log("loadDetail: " + detailUrl);
  const res = await Widget.http.get(detailUrl, { headers: { "User-Agent": UA, Referer: BASE_URL } });
  if (!res?.data) throw new Error("网络异常");
  return parseWallpaperDetail(res.data, detailUrl);
}
